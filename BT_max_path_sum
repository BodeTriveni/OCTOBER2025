#Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def maxPathSum(self, root: Optional[TreeNode]) -> int:
        import math
        self.max_sum = -math.inf

        def dfs(node: TreeNode | None) -> int:
            if not node:
                return 0

            left_sum = max(0, dfs(node.left))
            right_sum = max(0, dfs(node.right))
            path_sum_at_node = node.val + left_sum + right_sum
            self.max_sum = max(self.max_sum, path_sum_at_node)
            return node.val + max(left_sum, right_sum)

        dfs(root)
        return self.max_sum
