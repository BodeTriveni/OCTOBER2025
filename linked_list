class Node:
    def __init__(self,value):
        self.next=None
class Link:
    def __init__(self):
        self.head=None
    def insertatbegin(self,data):
            newnode=Node(data)
            newnode.next=self.head
            self.head=newnode
    def insertatindex(self,data,index):
            if index==0:
                self.insertatbegin(data)
                return 
            pos=0
            curr=self.head
            while curr is not None and pos+1!=index:
                 pos+=1
                 curr=curr.next
            if curr is not None:
                 newnode=Node(data)
                 newnode.next=curr.next
                 curr.next=newnode
            else:
                 print("index not present")
    def insertatend(self,data):
        newnode=Node(data)
        if self.head is None:
              self.head=newnode
              return 
        while curr.next:
             curr=curr.next
        curr.next=newnode
    def update(self,index,val):
        curr=self.head
        pos=0
        while curr is not None and pos!=index:
             pos+=1
             curr=curr.next
        if curr is not None:
             curr.data=val
